import fs from "fs/promises"
import path from "path"
import {fileURLToPath} from 'url'

const __dirname = fileURLToPath(new URL('.', import.meta.url))
const __filename = fileURLToPath(import.meta.url)

const SCRIPT_NAME = "[ðŸ§¶ PATCH TS]:"

console.info(SCRIPT_NAME, "patching typescript declaration file for engine wasm core (node)")

const PATH_TO_DECLARATION = "./pkg-node/engine_wasm_core.d.ts"

const fullpath = path.join(__dirname, PATH_TO_DECLARATION)

const filecontents = await fs.readFile(fullpath, {encoding: "utf-8"})
WebAssembly.Memory

const splitpath = __filename.split("/")
const pathstart = splitpath.findIndex(
    (dir) => dir.trim() === "huzem"
)
const filename = splitpath.slice(pathstart).join("/")

const newfile = `
${filecontents}\
// AUTO-GENERATED BY "${filename}"
/**
 * @type {{memory: WebAssembly.Memory}}
*/
export declare const __wasm: {memory: WebAssembly.Memory}
// END AUTO-GENERATED BY "${filename}"
`.trim()

await fs.writeFile(fullpath, newfile, {encoding: "utf-8"})

console.log(SCRIPT_NAME, "patched declartion successfully")
