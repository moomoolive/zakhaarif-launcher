"var y=Object.defineProperty;var _=(s,e,t)=>e in s?y(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var f=(s,e,t)=>(_(s,typeof e!=\"symbol\"?e+\"\":e,t),t);var M=(s,e)=>({value:s,transferables:e,__x_tdata__:!0});var l=\"__x_rpc_error__\",E=\"__x_rpc_response__\",u=[],c=class{idCount;queue;actionsIndex;messageContainer;messageTarget;messageHandlerRef;state;constructor({responses:e,messageTarget:t,state:n}){let r=this;this.state=n,this.messageTarget=t,this.messageHandlerRef=o=>{r.consumeMessage(o.data,\"source\"in o&&o.source||null)},this.messageTarget.addEventListener(\"message\",r.messageHandlerRef),this.idCount=0,this.queue=[],this.messageContainer={handle:\"\",id:-1,respondingTo:-1,data:null},this.actionsIndex=new Map;let a=Object.keys(e);for(let o=0;o<a.length;o++){let d=a[o];this.actionsIndex.set(d,e[d])}}cleanup(){return this.messageTarget.removeEventListener(\"message\",this.messageHandlerRef),!0}replaceMessageTarget(e){let t=this;return this.cleanup(),this.messageTarget=e,this.messageTarget.addEventListener(\"message\",n=>{t.consumeMessage(n.data,\"source\"in n&&n.source||null)}),!0}async executeWithSource(e,t,n,r){return await this.outboundMessage(t,e,n,r)}async execute(e,t=null,n=[]){return await this.outboundMessage(this.messageTarget,e,t,n)}outboundMessage(e,t,n=null,r=u){let a=this;return new Promise((o,d)=>{let h=this.idCount;a.queue.push({id:h,resolve:o,reject:d}),a.transferMessage(e,t,-1,n,r)})}responseMessage(e,t,n){let r=typeof n==\"object\"&&n!==null&&n.__x_tdata__===!0;this.transferMessage(e,E,t,r?n.value:n,r?n.transferables:u)}errorResponseMessage(e,t,n){this.transferMessage(e,l,t,n)}transferMessage(e,t,n,r,a){let{messageContainer:o}=this,d=this.idCount++;return o.handle=t,o.respondingTo=n,o.data=r??null,o.id=d,(e||this.messageTarget).postMessage(o,a||u),d}async consumeMessage(e,t){if(e===null||typeof e!=\"object\"){console.warn(\"recieved message was not an object ignoring message\",e);return}if(e.handle===E||e.handle===l){let{queue:n}=this;for(let r=0;r<n.length;r++){let a=n[r];if(e.respondingTo===a.id){e.handle===l?a.reject(e.data):a.resolve(e.data),n.splice(r,1);return}}console.warn(\"incoming response doesn't map to any queued message. ignoring\",e);return}if(!this.actionsIndex.has(e.handle)){this.errorResponseMessage(t,e.id,`attempted to call non-existent handler \"${e.handle}\"`);return}if(e.respondingTo===-1&&e.data!==void 0){let n=this.actionsIndex.get(e.handle);try{let r=await n(e.data,this.state)??null;this.responseMessage(t,e.id,r)}catch(r){this.errorResponseMessage(t,e.id,`rpc function \"${e.handle}\" encountered an exception. ${r} ${r?.stack||\"no-stack\"}`)}return}console.warn(\"incoming message is neither a response to a previous message or a request to perform an action. ignoring message\",e)}addResponses(e,{allowOverwrite:t=!1}={}){let n=Object.keys(e),r=!1;for(let a=0;a<n.length;a++){let o=n[a];!t&&this.actionsIndex.has(o)||(r=!0,this.actionsIndex.set(o,e[o]))}return r}};f(c,\"transfer\",M);var R=self,b={ping:()=>1},{top:w,addEventListener:S,removeEventListener:T}=R,p=()=>{},i=new c({responses:b,messageTarget:{postMessage:(s,e)=>{w.postMessage(s,\"*\",e)},addEventListener:(s,e)=>{p=t=>{t.source===w&&e({data:t.data})},S(\"message\",p)},removeEventListener:()=>{T(\"message\",p)}},state:{authToken:\"\"}}),x={getFile:async s=>{let e=await i.execute(\"getFile\",s);return e&&c.transfer(e,[e.body])}};var v=\"mirror-sw.compiled.js\";if(window.top!==window.parent)throw new Error(\"second-level embedding is disallowed\");if(window.self===window.top)throw new Error(\"document must be embedded in iframe\");if(!(\"serviceWorker\"in navigator))throw await i.execute(\"signalFatalError\",{details:\"Service worker not supported\"}),new Error(\"sandbox requires service worker to function\");var[k]=await Promise.all([navigator.serviceWorker.ready,navigator.serviceWorker.register(v)]),{active:L}=k,W=new c({responses:x,messageTarget:{postMessage:(s,e)=>{L?.postMessage(s,e)},addEventListener:(s,e)=>{navigator.serviceWorker.addEventListener(\"message\",e)},removeEventListener:(s,e)=>{navigator.serviceWorker.removeEventListener(\"message\",e)}},state:{}}),g=document.createElement(\"div\");g.setAttribute(\"id\",\"root\");document.body.appendChild(g);var C=[],O={rootElement:g,initialState:await i.execute(\"getInitialState\"),messageAppShell:(s,e=null,t=C)=>i.execute(s,e,t),addRpcResponses:s=>i.addResponses(s,{allowOverwrite:!1}),logPrivateDeps:()=>{console.info(\"private deps\",{swRpc:W,controllerRpc:i})}};await i.execute(\"secureContextEstablished\");var A=document.getElementById(\"root-script\"),m=await(async s=>{try{return console.info(\"importing\",s),await import(s)}catch(e){return console.error(\"encountered error when importing module\",e),null}})(A?.getAttribute(\"entry\")||\"\");if(!m)throw i.execute(\"signalFatalError\",{details:\"couldn't find extension entry\"}),new Error(\"extension entry does not exist\");if(!(\"main\"in m))throw i.execute(\"signalFatalError\",{details:\"'main' function is not exported from entry\"}),new Error(\"no main function exported from module\");m.main(O);\n//# sourceMappingURL=secure.compiled.js.map\n"